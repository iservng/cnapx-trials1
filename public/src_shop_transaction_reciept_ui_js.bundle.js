"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcnapx_trials"] = self["webpackChunkcnapx_trials"] || []).push([["src_shop_transaction_reciept_ui_js"],{

/***/ "./src/shop/transaction_reciept_ui.js":
/*!********************************************!*\
  !*** ./src/shop/transaction_reciept_ui.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionRecieptUi: () => (/* binding */ TransactionRecieptUi)\n/* harmony export */ });\n/* harmony import */ var _utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/insert_into_DOM */ \"./src/utils/insert_into_DOM.js\");\n/* harmony import */ var _utils_toast_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/toast_it */ \"./src/utils/toast_it.js\");\n/* harmony import */ var _indexeddb_offlinedb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../indexeddb/offlinedb */ \"./src/indexeddb/offlinedb.js\");\n\r\n\r\n\r\nclass TransactionRecieptUi\r\n{\r\n    #_mErrors;\r\n    #mErrorMsg;\r\n    #transactionId;\r\n    #offlinedb;\r\n    constructor()\r\n    {\r\n        this.#_mErrors = 0;\r\n        this.#mErrorMsg = ``;\r\n        this.#transactionId = sessionStorage.getItem('transaction_id');\r\n        this.#offlinedb = new _indexeddb_offlinedb__WEBPACK_IMPORTED_MODULE_2__.OfflineDB();\r\n    }\r\n\r\n\r\n    /**\r\n     * CLASS PUBLIC API\r\n     */\r\n    createUi()\r\n    {\r\n        if(this.#_mErrors == 0)\r\n        {\r\n            \r\n\r\n            let content = `\r\n            <div class=\"container\" style=\"margin-top: 4rem;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\"></div>\r\n                    <div class=\"col s12 m2 l2 backToDiv\">\r\n                        &nbsp;\r\n                    </div>\r\n                    <div class=\"col s12 l6 m6 z-depth-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s12\">\r\n                            <div class=\"card z-depth-0\">\r\n                                <div class=\"card-content\">\r\n                                    <div>\r\n                                        <div class=\"row\">\r\n                                            <p style=\"margin-bottom: 2rem;\"><b>Cash Reciept</b></p>\r\n                                            <div class=\"col s6\">\r\n                                                <p class=\"purple-text\">\r\n                                                    <b>Business Name</b>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <small>\r\n                                                    No.45, street Address <br>\r\n                                                    City, state Nigeria <br>\r\n                                                    09034891247 <br>\r\n                                                    iservng@gmail.com\r\n                                                    </small>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div class=\"col s6 right-align\">\r\n                                                <p class=\"purple-text\">\r\n                                                    <b>Customer Name</b>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <small>\r\n                                                    <span id=\"customer_name\">No.45, street Address</span> <br>\r\n                                                    <span id=\"customer_phone\">09034891247</span> <br>\r\n                                                    <span id=\"customer_address\">iservng@gmail.com</span>\r\n                                                    </small>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"purple lighten-5\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col s6\">\r\n                                                <small>Reciept No. <span id=\"reciept_id\">reciept Id</span></small>\r\n                                            </div>\r\n                                            <div class=\"col s6 right-align\">\r\n                                                <small>Date: <span id=\"reciept_date\">Reciep date</span></small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <p>\r\n                                        <table>\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th><small>Description</small></th>\r\n                                                <th><small>Quantity</small></th>\r\n                                                <th><small>Rate</small></th>\r\n                                                <th><small>Amount</small></th>\r\n                                            </tr>\r\n                                            </thead>\r\n\r\n                                            <tbody id=\"table_records\">\r\n                                                \r\n                                            </tbody>\r\n                                            <tfoot>\r\n                                                <tr>\r\n                                                    <td colspan=\"2\"></td>\r\n                                                    <td><small><b>Total:</b></small></td>\r\n                                                    <td>\r\n                                                        <b>\r\n                                                            <span style=\"text-decoration: line-through;\">N</span><span id=\"grand_total\">7</span>.00\r\n                                                        </b>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tfoot>\r\n                                        </table>\r\n                                    </p>\r\n                                    \r\n                                </div>\r\n                                <div style=\"margin-top: 1rem;\">\r\n                                    <small>The total amount specified has been paid by <b id=\"paid_by\">[name]</b>. This reciept was printed on the <span id=\"current_date\">Current Date</span></small>\r\n                                </div>\r\n                                <div style=\"margin-top: 1rem;\" class=\"right-align\">\r\n                                    <small>\r\n                                        <b>\r\n                                            Thanks for your patronage!<br>\r\n                                            Signed: Management.\r\n                                        </b>\r\n                                    </small>\r\n                                </div>\r\n                                <p>\r\n                                    <p><div class=\"divider\"></div></p>\r\n                                    <small>Powered by </small><b class=\"purple-text\">iservng</b>\r\n                                </p>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                    </div>\r\n                    <div class=\"col s12 m4 l4\" id=\"printActivityBox\">\r\n                        <div style=\"margin-top: 2rem;\" class=\"center-align initial_print_div\">\r\n                            <a href=\"#\" class=\"btn-small green ask_for_customer_info\">Print</a>\r\n                            <a href=\"#\" class=\"btn-small red\">Cancel!</a>\r\n                        </div>\r\n                        <div id=\"customer_info_box\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            `;\r\n            (0,_utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__.insertIntoDOM)('main', content);\r\n\r\n            if(sessionStorage.getItem('referer_id') && (sessionStorage.getItem('referer_id') == './transactions_ui.js'))\r\n            {\r\n                let folderUrl = sessionStorage.getItem('referer_id');\r\n                // console.log(folderUrl);\r\n                document.querySelector('.backToDiv').innerHTML = `\r\n                <p>\r\n                    <a href=\"#\" class=\"btn-flat back_to_referer\">Back</a>\r\n                </p>\r\n                `;\r\n                // Register the event handler\r\n                if(document.querySelector('.back_to_referer'))\r\n                {\r\n                    document.querySelector('.back_to_referer').addEventListener('click', e => {\r\n                        e.preventDefault();\r\n                        __webpack_require__.e(/*! import() */ \"src_shop_transactions_ui_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./transactions_ui.js */ \"./src/shop/transactions_ui.js\"))\r\n                        .then(m => {\r\n                            sessionStorage.removeItem('referer_id');\r\n                            let transactionUi = new m.TransactionsUi();\r\n                            transactionUi.createUi();\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error.message);\r\n                            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Unable to get back to Transactions');\r\n                        });\r\n                    }, false);\r\n                }\r\n            }\r\n\r\n            //Register event handler for the ask_for_customer_info\r\n            if(document.querySelector('.ask_for_customer_info'))\r\n            {\r\n                document.querySelector('.ask_for_customer_info').addEventListener('click', e => {\r\n                    e.preventDefault();\r\n                    this.#askForCustomerInfo()\r\n                });\r\n            }\r\n\r\n            /**\r\n             * After the reciept UI has been succesfully painted on the DOM, then using the transaction-id we can query for the transaction fron the cart with specified transaction id\r\n             */\r\n            let objectStoreName = 'cart';\r\n            let transactionId = this.#transactionId;\r\n            let indexName = 'transaction_id';\r\n\r\n            // call the function to\r\n            this.#getTransactionDetailFromDB(objectStoreName, transactionId, indexName, this.#addOtherContent);\r\n\r\n        }\r\n        else \r\n        {\r\n            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', this.#mErrorMsg);\r\n            console.log(this.#mErrorMsg);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #getTransactionDetailFromDB(objectStoreName, transactionId, indexName, callback)\r\n    {\r\n        let amount = [];\r\n        let recieptCreatedOn = 0;\r\n        let recieptNumber = ``;\r\n\r\n        this.#offlinedb.withDB(db => {\r\n            // Create a read-only transaction object for this\r\n            let transaction = db.transaction([objectStoreName]);\r\n\r\n            //Get the object-store from the transaction\r\n            let objectStore = transaction.objectStore(objectStoreName);\r\n            let index = objectStore.index(indexName);\r\n            let keyRange = IDBKeyRange.only(transactionId);\r\n\r\n            \r\n            index.openCursor(keyRange).onsuccess = event => {\r\n                const cursor = event.target.result;\r\n                if(cursor)\r\n                {\r\n                    let specificItem = (cursor.value.key);\r\n                    let itemQuantity = cursor.value.item;\r\n\r\n                    recieptCreatedOn = cursor.value.createdOn;\r\n                    recieptNumber = cursor.value.transaction_id;\r\n\r\n                    //Start another transaction\r\n                    this.#offlinedb.withDB(db => {\r\n                        db.transaction('products')\r\n                        .objectStore('products')\r\n                        .get(specificItem).onsuccess = (event) => {\r\n                            let product = event.target.result;\r\n                            amount.push(product.selling_price * itemQuantity);\r\n                            document.querySelector('#table_records').innerHTML += `\r\n                            <tr>\r\n                                <td><small>${product.product_name}</small></td>\r\n                                <td><small>${itemQuantity}</small></td>\r\n                                <td>\r\n                                    <small><span style=\"text-decoration: line-through;\">N</span>${product.selling_price}.00</small>\r\n                                </td>\r\n                                <td>\r\n                                    <small><span style=\"text-decoration: line-through;\">N</span>${product.selling_price * itemQuantity}.00</small>\r\n                                </td>\r\n                            </tr>\r\n                            `;\r\n                            // sessionStorage.setItem('value', output);\r\n                            document.querySelector('#grand_total').innerHTML = amount.reduce((x,y) => x+y);\r\n\r\n                        };\r\n                    });\r\n\r\n                    cursor.continue();\r\n                }\r\n                \r\n                callback(recieptCreatedOn, recieptNumber);\r\n            };\r\n            \r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #addOtherContent(recieptDate, recieptNumber)\r\n    {\r\n        // console.log(output);\r\n        let d = new Date(recieptDate);\r\n        let recieptCreatedOn = (d.getDate()+ '-'+(d.getMonth()+1)+ '-'+d.getFullYear());\r\n\r\n        // console.log(recieptNumber);\r\n        document.querySelector('#reciept_id').innerHTML = recieptNumber;\r\n        document.querySelector('#reciept_date').innerHTML = recieptCreatedOn;\r\n        sessionStorage.setItem('reciept_id', recieptNumber);\r\n\r\n        //This date is used for when the reciept was currently printed ie the current date at which the reciept was printed or reprinted\r\n        let currentD = new Date();\r\n        let recieptPrintDate = (currentD.getDate()+ '-'+(currentD.getMonth()+1)+ '-'+currentD.getFullYear());\r\n        document.querySelector('#current_date').innerHTML = recieptPrintDate;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #askForCustomerInfo()\r\n    {\r\n        let content = `\r\n        \r\n            <div class=\"row\">\r\n            <form class=\"col s12\" id=\"customerInfoRecieptForm\">\r\n                <div class=\"col s12\">\r\n                    <p><b>Would you like to add the customer information on the reciept?</b></p>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-content\">\r\n                            <span class=\"card-title\">Enter Customer Info</span>\r\n                            \r\n                                <div class=\"row\">\r\n                                \r\n                                    <div class=\"row\">\r\n                                        <div class=\"input-field col s12\">\r\n                                            <input id=\"name\" type=\"text\" class=\"validate\">\r\n                                            <label for=\"name\">Name</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"input-field col s12\">\r\n                                            <input id=\"phone\" type=\"text\" class=\"validate\">\r\n                                            <label for=\"phone\">Phone</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"input-field col s12\">\r\n                                            <input id=\"address\" type=\"text\" class=\"validate\">\r\n                                            <label for=\"phone\">Address</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"input-field col s12\">\r\n                                            <input type=\"submit\" class=\"btn green darken-3\" value=\"Add Customer\">\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </form>\r\n                <div class=\"right-align\">\r\n                    <a href=\"#\" class=\"cancel red-text\" id=\"cancel_now\">\r\n                        Cancel\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            `;\r\n        (0,_utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__.insertIntoDOM)('#customer_info_box', content);\r\n\r\n        //Remove the inital two buttons from the ui\r\n        if(document.querySelector('.initial_print_div'))\r\n            document.querySelector('.initial_print_div').style.display = 'none';\r\n\r\n        //Register Event handler for the print-now btn\r\n        if(document.querySelector('#customerInfoRecieptForm'))\r\n        {\r\n            document.querySelector('#customerInfoRecieptForm').addEventListener('submit', e => {\r\n                e.preventDefault();\r\n                this.#processAddCustomerInfoForm(e.target);\r\n            });\r\n        }\r\n\r\n        //Register Event handler for the cancel_now btn\r\n        if(document.querySelector('#cancel_now'))\r\n        {\r\n            document.querySelector('#cancel_now').addEventListener('click', e => {\r\n                e.preventDefault();\r\n                Promise.all(/*! import() */[__webpack_require__.e(\"src_shoppingCart_shopping_cart_home_page_js\"), __webpack_require__.e(\"src_shoppingCart_sample_data_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../shoppingCart/shopping_cart_home_page.js */ \"./src/shoppingCart/shopping_cart_home_page.js\"))\r\n                .then(m => {\r\n                    let shopFront = new m.ShoppingCartHomePage();\r\n                    shopFront.createUi();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    #processAddCustomerInfoForm(form)\r\n    {\r\n        if(!form.name.value || form.name.value == '')\r\n            //The user did not provide a customer name, therefore proceed by showing the print reciept-only button.\r\n            this.#showPrintRecieptOnlyButton();\r\n        else \r\n        {\r\n            //Extract all its info\r\n            let namePattern = /^[a-zA-Z0-9\\s\\.,-]{3,90}$/;\r\n            let phonePattern = /^[0][7-9][0-1][\\d]{8}$/;\r\n            if(!namePattern.test(form.name.value))\r\n                (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Invalid character found!');\r\n            else if(!phonePattern.test(form.phone.value.trim()))\r\n                (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Invalid phone number');\r\n            else if(!namePattern.test(form.address.value.trim()))\r\n                (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Invalid character found in address');\r\n            else\r\n            {\r\n                let name = form.name.value.trim();\r\n                let phone = form.phone.value.trim();\r\n                let address = form.address.value.trim();\r\n                this.#addInfoBeforPrintReciept(name, phone, address);\r\n            }\r\n                \r\n        }\r\n\r\n    }\r\n\r\n    #addInfoBeforPrintReciept(name, phone, address)\r\n    {\r\n        //1. structure info as object\r\n        let customerDate = {\r\n            reciept: sessionStorage.getItem('reciept_id'),\r\n            name: name,\r\n            phone: phone,\r\n            address: address,\r\n            createdOn: Date.now()\r\n        };\r\n\r\n        //2. Add the above data to the DB\r\n        let storeName = \"customer\";\r\n        this.#offlinedb.saveToDB(storeName, this.#logCustomerId, customerDate);\r\n\r\n        //3. Add the customer infor to the reciept\r\n        document.querySelector('#customer_name').innerHTML = name;\r\n        document.querySelector('#paid_by').innerHTML = name;\r\n        document.querySelector('#customer_phone').innerHTML = phone;\r\n        document.querySelector('#customer_address').innerHTML = address;\r\n\r\n        //4. call the display of print-reciept btn function\r\n        this.#showPrintRecieptOnlyButton();\r\n    }\r\n    #logCustomerId(id)\r\n    {\r\n        (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('blue', id+' Customer Added');\r\n    }\r\n\r\n    #showPrintRecieptOnlyButton()\r\n    {\r\n        let content = `\r\n        <div class=\"card z-depth-0\">\r\n            <p>\r\n                <b>\r\n                    Confirm Print\r\n                </b>\r\n            </p>\r\n            <p><a href=\"#\" class=\"btn blue generate_pdf\">Print Now</a></p>\r\n        </div>\r\n        `;\r\n        (0,_utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__.insertIntoDOM)(\"#customer_info_box\", content);\r\n        if(document.querySelector('.generate_pdf'))\r\n        {\r\n            document.querySelector('.generate_pdf').addEventListener('click', e => {\r\n                e.preventDefault();\r\n                this.#printRecieptNow(); //printActivityBox\r\n            }, false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    #printRecieptNow()\r\n    {\r\n        //1. remove any element from reciept page\r\n        if(document.querySelector('#printActivityBox'))\r\n            document.querySelector('#printActivityBox').innerHTML = ``;\r\n\r\n        window.print();\r\n        //Register event handler for when the reciept is completed printing\r\n        window.addEventListener(\"afterprint\", (event) => {\r\n            console.log(\"After print\");\r\n        });\r\n\r\n    } //\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}\r\n\r\n\n\n//# sourceURL=webpack://cnapx-trials/./src/shop/transaction_reciept_ui.js?");

/***/ })

}]);