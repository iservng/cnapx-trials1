"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcnapx_trials"] = self["webpackChunkcnapx_trials"] || []).push([["src_shop_transactions_ui_js"],{

/***/ "./src/shop/transactions_ui.js":
/*!*************************************!*\
  !*** ./src/shop/transactions_ui.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionsUi: () => (/* binding */ TransactionsUi)\n/* harmony export */ });\n/* harmony import */ var _utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/insert_into_DOM */ \"./src/utils/insert_into_DOM.js\");\n/* harmony import */ var _utils_toast_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/toast_it */ \"./src/utils/toast_it.js\");\n/* harmony import */ var _indexeddb_offlinedb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../indexeddb/offlinedb.js */ \"./src/indexeddb/offlinedb.js\");\n/* harmony import */ var _utils_small_spinner_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/small_spinner.js */ \"./src/utils/small_spinner.js\");\n\r\n\r\n\r\n\r\n\r\nclass TransactionsUi\r\n{\r\n    #_mErrors;\r\n    #mErrorMsg;\r\n    #offlinedb;\r\n    #monthNames;\r\n    #weekDayNames;\r\n    #nameOfCurrentMonth;\r\n    #currentMonth;\r\n    #nextMonth;\r\n    #upperboundValue;\r\n    #lowerboundValue;\r\n\r\n    #lowerOpen;\r\n    #upperOpen;\r\n    constructor()\r\n    {\r\n        this.#_mErrors = 0;\r\n        this.#mErrorMsg = '';\r\n        this.#offlinedb = new _indexeddb_offlinedb_js__WEBPACK_IMPORTED_MODULE_2__.OfflineDB();\r\n        this.#monthNames = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        this.#weekDayNames = [\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thusday',\r\n            'Friday',\r\n            'Saturday',\r\n            'Sunday',\r\n        ];\r\n        let dt = new Date();\r\n        this.#currentMonth = dt.getMonth();\r\n\r\n        let nxtMonth = this.#currentMonth + 1;\r\n        let dtsmp = new Date(dt.getFullYear(), nxtMonth, 1);\r\n        let crttsmp = new Date(dt.getFullYear(), dt.getMonth(), 1);\r\n\r\n    \r\n        this.#lowerboundValue = crttsmp.getTime();\r\n        this.#lowerOpen = false;\r\n\r\n        this.#upperboundValue = dtsmp.getTime();\r\n        this.#upperOpen = true;\r\n\r\n        this.#nameOfCurrentMonth = this.#monthNames[dt.getMonth()];\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //PUBLIC API\r\n    createUi()\r\n    {\r\n        if(this.#_mErrors == 0)\r\n        {\r\n            let content  = `\r\n            <div class=\"container\">\r\n                <div class=\"row\" style=\"margin-top: 4rem;\">\r\n\r\n                    <div class=\"col s12\" style=\"margin-bottom: 4rem;\">\r\n                        <h6>\r\n                            <b class=\"purple-text text-darken-3\">\r\n                                Cart Transactions\r\n                            </b>\r\n                        </h6>\r\n                        <a href=\"#\" class=\"sidenav-trigger purple-text text-darken-4\" data-target=\"mobile-demo\">\r\n                            <b>Menu</b>\r\n                        </a>\r\n                        <p>To view other transactions please use the box below then specify a range.</p>\r\n                    </div>\r\n\r\n                    \r\n                    <!-- MONEY-IN -->\r\n                    <form id=\"transaction_range\">\r\n                    <div class=\"col s6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s12\">\r\n                                <div class=\"card z-depth-0\">\r\n                                    <div class=\"card-content purple-text\">\r\n                                        <span class=\"card-title\">\r\n                                            From Date:\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"card-action\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"input-field col s12\">\r\n                                                <input id=\"date1\" type=\"date\" class=\"validate\">\r\n                                                <label for=\"date1\">Start Date</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <!-- MONEY-OUT  -->\r\n                    <div class=\"col s6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s12\">\r\n                                <div class=\"card z-depth-0\">\r\n                                    <div class=\"card-content purple-text\">\r\n                                        <span class=\"card-title\">\r\n                                            To Date:\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"card-action\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"input-field col s12\">\r\n                                                <input id=\"date2\" type=\"date\" class=\"validate\">\r\n                                                <label for=\"date2\">\r\n                                                    End Date\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n\r\n\r\n                    <!-- TABLE OF TRANSACTION  -->\r\n                    <div class=\"col s12\" style=\"margin-top: 0rem;\">\r\n                        <h4 class=\"purple-text\">\r\n                            <small id=\"name_of_month\"> \r\n                                ${this.#nameOfCurrentMonth} Transactions \r\n                            </small>\r\n                        </h4>\r\n                        <p>\r\n                            <small>Tabulated list of all the transaction within the current month, to view any of the detail please click on the transacton-ID.</small>\r\n                        </p>\r\n                            \r\n                        <table class=\"highlight\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>ID</th>\r\n                                    <th>MOP</th>\r\n                                    <th>Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody id=\"records_container\"></tbody>\r\n                            <tfoot id=\"tr_gtotal\"></tfoot>\r\n                        </table>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col s12\" style=\"margin-top: 5rem;\">\r\n                        <p> <small>Powered by</small> <b class=\"purple-text\">iservng</b></p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>`;\r\n            (0,_utils_insert_into_DOM__WEBPACK_IMPORTED_MODULE_0__.insertIntoDOM)('main', content);\r\n\r\n            /**\r\n             * Call for the recent transactions records from the DB\r\n             * -----------------------------------------------------\r\n             */\r\n            if(document.querySelector('#records_container'))\r\n            {\r\n                /**\r\n                 * (elem, lowerBound, upperBound, includeLowerValue, includeUpperValue)\r\n                 */\r\n                let elem = document.querySelector('#records_container');\r\n                this.#showRecentTransactionRecords(elem, this.#lowerboundValue, this.#upperboundValue, this.#lowerOpen, this.#upperOpen);\r\n            }\r\n\r\n\r\n            //Register the onchange handler for date2\r\n            if(document.querySelector('#date2'))\r\n            {\r\n                document.querySelector('#date2').addEventListener('change', e => {\r\n                    e.preventDefault();\r\n                    this.#loadTransactionByDateRange(e.target);\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else \r\n        {\r\n            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', this.#mErrorMsg);\r\n            console.log(this.#mErrorMsg);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //Utility functions\r\n    #showRecentTransactionRecords(elem, lowerBound, upperBound, lowerOpen, upperOpen)\r\n    {\r\n        \r\n        this.#offlinedb.withDB(db => {\r\n            let transaction = db.transaction('daily-transactions');\r\n            let objectStore = transaction.objectStore('daily-transactions');\r\n\r\n            //Get the index\r\n            let index = objectStore.index('createdOn');\r\n\r\n            //Get the IDB-KEY-Range\r\n            // let boundKeyRange = IDBKeyRange.bound(1, 4);\r\n            // let boundKeyRange = IDBKeyRange.bound(this.#lowerboundValue, this.#upperboundValue, false, true);\r\n            let boundKeyRange = IDBKeyRange.bound(lowerBound, upperBound, lowerOpen, upperOpen);\r\n\r\n            //Use index to open cursor\r\n            let grandTotal = 0;\r\n            index.openCursor(boundKeyRange).onsuccess = event => {\r\n                const cursor = event.target.result;\r\n                if(cursor)\r\n                {\r\n                    //Date\r\n                    let d = new Date(cursor.value.createdOn);\r\n                    let transactionDate = d.getDate() +' '+ this.#monthNames[d.getMonth()] + ', '+d.getFullYear();\r\n\r\n                    //Amount\r\n                    grandTotal += Number(cursor.value.transaction_amount);\r\n\r\n                    elem.innerHTML += `\r\n                    <tr>\r\n                        <td>\r\n                            <small>${transactionDate}</small>\r\n                        </td>\r\n                        <td>\r\n                            <small>\r\n                                <a href=\"#\" class=\"transactionLink\" data-transactionId=\"${cursor.value.transaction_id}\">\r\n                                    ${cursor.value.transaction_id}\r\n                                </a>\r\n                            </small>\r\n                        </td>\r\n                        <td>\r\n                            <small>${cursor.value.payment_method}</small>\r\n                        </td>\r\n                        <td>\r\n                            <small>\r\n                                <span style=\"text-decoration: line-through;\">N</span> ${cursor.value.transaction_amount}.00\r\n                            </small>\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    `;\r\n                    document.querySelector('#tr_gtotal').innerHTML = `\r\n                    <tr>\r\n                        <td colspan=\"2\"></td>\r\n                        <td><b>Total</b></td>\r\n                        <td><b style=\"text-decoration: line-through;\">N</b> <b>${grandTotal}.00</b></td>\r\n                    </tr>`;\r\n                    // ======================\r\n                    //Register event handle for the transactionid-links\r\n                    if(document.querySelectorAll('.transactionLink'))\r\n                    {\r\n                        let transactionBtns = (document.querySelectorAll('.transactionLink'));\r\n                        transactionBtns.forEach(btn => {\r\n                            btn.addEventListener('click', e => {\r\n                                e.preventDefault();\r\n                                this.#processTransactionDetails(e.target);\r\n                            }, false);\r\n                        });\r\n                    }\r\n                    // ======================\r\n                    cursor.continue();\r\n                }\r\n                \r\n            };\r\n            \r\n            // --------------------\r\n        });\r\n\r\n    }\r\n\r\n\r\n    #processTransactionDetails(elemBtn)\r\n    {\r\n        let transactionId = elemBtn.dataset.transactionid;\r\n        // transaction_id\r\n        sessionStorage.setItem('transaction_id', transactionId);\r\n\r\n        //This is used for telling the \"transaction_reciept_ui.js\", the specific class that called it, so that it can get back to it if needed.\r\n        sessionStorage.setItem('referer_id', './transactions_ui.js');\r\n\r\n        __webpack_require__.e(/*! import() */ \"src_shop_transaction_reciept_ui_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./transaction_reciept_ui.js */ \"./src/shop/transaction_reciept_ui.js\"))\r\n        .then(m => {\r\n            let detaileUi = new m.TransactionRecieptUi();\r\n            detaileUi.createUi();\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message);\r\n            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Unable to load the transaction details ui');\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    #loadTransactionByDateRange(date2)\r\n    {\r\n        let date1 = document.querySelector('#date1');\r\n        if(!date1.value || date1.value == '')\r\n            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'Start date is required');\r\n        else if(!date2.value || date2.value == '')\r\n            (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'The End date is required');\r\n        else \r\n        {\r\n            let startDate = new Date(date1.value).getTime();\r\n            let endDate = new Date(date2.value).getTime();\r\n\r\n            if(endDate < startDate)\r\n            {\r\n                (0,_utils_toast_it__WEBPACK_IMPORTED_MODULE_1__.toastIt)('red', 'The End date cannot be less than the start date');\r\n            }\r\n            else \r\n            {\r\n            \r\n                // Clean up the elem records holder\r\n                let elem = document.querySelector('#records_container');\r\n                elem.innerHTML = ``;\r\n\r\n                let lowerBound = startDate;\r\n                let openLower = false;\r\n                let upperBound = endDate;\r\n                let openUpper = false;\r\n\r\n                this.#showRecentTransactionRecords(elem, lowerBound, upperBound, openLower, openUpper);\r\n\r\n                // document.querySelector('#name_of_month').innerHTML = ``;\r\n\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://cnapx-trials/./src/shop/transactions_ui.js?");

/***/ })

}]);